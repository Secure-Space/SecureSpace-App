MainPage Snippets:

1. 
// const MainPage = ({navigation}) => {

//     const navigate = () => {
//         navigation.navigate('SignIn');
//     }

//     constructor(props) {
//         super(props);
//         this.state = {
//             fontsLoaded: false
//         }
//     }

//     return (
        // <View style={styles.mainView}>
        //     <View style={styles.topView}>
        //         <Image
        //             style={styles.logo}
        //             source = {require('../assets/SSLONB.png')} 
        //         />
        //     </View>
        //     <View style={styles.bottomView}>
        //         <Text style={{        color: '#FFBD59',
        // fontFamily: 'GiantRobotArmy-Medium', 
        // fontSize: 27}}>
        //             Secure{'\n'}
        //             Space
        //         </Text>
        //     </View>
        // </View>
//     );
//   }

// export default MainPage;

{       
        color: '#FFBD59',
        fontFamily: 'GiantRobotArmy-Medium', 
        fontSize: 27
}


<--Code from infoPage.js-->
style={{width: windowWidth, height: 270, backgroundColor: 'black'}}



{
        messages.length - 1 === messages.findIndex(({ id }) => id === messages.length)
        && (
          <TouchableOpacity style={styles.touchable}>
            <Text style={styles.touchableText}>See More</Text>
          </TouchableOpacity>
        )
      }

        position: 'absolute',
        bottom: 0,
        left: 0,
        right: 0,
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center',

<--Code from ./Firebase/firebase.js-->

script tag:
    apiKey: "AIzaSyDI2ypIWM9qR-os2gzf1eQs9iI4fdG6j3E",
    authDomain: "aethermarshal.firebaseapp.com",
    projectId: "aethermarshal",
    storageBucket: "aethermarshal.appspot.com",
    messagingSenderId: "939424439975",
    appId: "1:939424439975:web:e870f0e27d22fecd054582",
    measurementId: "G-CQBSS869NX"

npm:
    apiKey: "AIzaSyDI2ypIWM9qR-os2gzf1eQs9iI4fdG6j3E",
    authDomain: "aethermarshal.firebaseapp.com",
    projectId: "aethermarshal",
    storageBucket: "aethermarshal.appspot.com",
    messagingSenderId: "939424439975",
    appId: "1:939424439975:web:e870f0e27d22fecd054582",
    measurementId: "G-CQBSS869NX"

    aethermarshal/assets/fonts/blinker/Blinker-Regular.ttf


const storeData = async () => {
  try {
    await AsyncStorage.setItem('fullName', fullName);
    await AsyncStorage.setItem('mobileNum', mobileNum.toString());
    await AsyncStorage.setItem('email', email);
    navigateI();
  } catch (error) {
    console.log(error);
  }
};

function createNewUser(){
  createUserWithEmailAndPassword(auth, email, password)
    .then(() => {
      storeData();
    })
    .catch((error) => {
      console.error(error);
    });
}


    // const analytics = getAnalytics(app);


// export const analytics = () => {
//     if (typeof window !== "undefined") {
//       return firebase.analytics()
//     } else {
//       return null
//     }
// }

// const analytics = isSupported().then(yes => yes ? getAnalytics(app) : null);




        <ScrollView style={styles.container}>
            <View style={styles.fullView}>
                <View style={styles.logoView}>
                    <Image
                        style={styles.logo}
                        source={require("./../../assets/Images/SSspellwhiteNB.png")}
                    />
                </View>

            <View style={styles.calendarView}>
                <Text style={styles.calendarTxt}>Calendar</Text>
                <View style={styles.calendarContainer}>

                </View>
            </View>

            <View style={styles.toolView}>
            <Text style={styles.toolTxt}>Surviellance</Text>
                <View style={styles.toolBtnView}>
                    <TouchableOpacity style={styles.feedButton}>
                        <Text>A</Text>
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.feedButton}>
                        <Text>B</Text>
                    </TouchableOpacity>
                </View>
            </View>

                <View style={styles.analyticsView}>
                    <Text style={styles.txt}>BARS</Text>
                </View>


            </View>   
    </ScrollView>  







      fullView: {
        flex: 1,
        backgroundColor: '#000000',
        // backgroundColor: 'green',
    },
    container: {
        flex: 1,
        padding: 20,
        backgroundColor: "#fff"
    },
    logoView:{
        width: '100%',
        height: '23%',
        justifyContent: 'center',
        alignItems: 'center',
    },
    logo: {
        width: '80%',
        resizeMode: 'contain',
        marginTop: 30
    },
    calendarView: {
        width: '100%',
        height: '45%',
        // backgroundColor: '#5eccff',
    },
    calendarTxt: {
        color: 'grey',
        fontSize: 20,
        marginTop: 10,
        marginLeft: 10,
        fontWeight: 'bold'
    },
    calendarContainer: {
        backgroundColor: '#2B2B2B',
        opacity: .75,
        height: '80%',
        width: '95%',
        marginTop: 6,
        marginLeft: 8,
        borderRadius: 30
    },
    toolView: {
        backgroundColor: '#5eccff',
        width: '100%',
        height: '50%',
        marginTop: 5,
        flexDirection: 'column',
    },
    toolTxt: {
        color: 'grey',
        fontSize: 20,
        marginTop: 10,
        marginLeft: 10,
        fontWeight: 'bold'
    },
    toolBtnView: {
        flexDirection: 'row',
    },
    feedButton: {
        backgroundColor: 'white'
    },
    analyticsView: {
        backgroundColor: 'white',
        width: '100%',
        height: '40%',
        flexDirection: 'column',
        marginTop: 10,
    },

            {/* <TouchableWithoutFeedback onPress={toggleExpand}>
            <View style={styles.datesExp}>
                <Text style={styles.notifTxt}>Yesterday</Text>
                {expanded && (
                    <View style={styles.notifContainer}></View>
                )}
                <Text style={styles.notifTxt}>Yesterday</Text>
            </View>
        </TouchableWithoutFeedback> */}








        import React, { Component } from 'react';
import {
  Switch,
  ScrollView,
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
} from 'react-native';
import * as Animatable from 'react-native-animatable';
import Collapsible from 'react-native-collapsible';
import Accordion from 'react-native-collapsible/Accordion';

const BACON_IPSUM =
  'Bacon ipsum dolor amet chuck turducken landjaeger tongue spare ribs. Picanha beef prosciutto meatball turkey shoulder shank salami cupim doner jowl pork belly cow. Chicken shankle rump swine tail frankfurter meatloaf ground round flank ham hock tongue shank andouille boudin brisket. ';

const CONTENT = [
  {
    title: 'First',
    content: BACON_IPSUM,
  },
  {
    title: 'Second',
    content: BACON_IPSUM,
  },
  {
    title: 'Third',
    content: BACON_IPSUM,
  },
  {
    title: 'Fourth',
    content: BACON_IPSUM,
  },
  {
    title: 'Fifth',
    content: BACON_IPSUM,
  },
];

const SELECTORS = [
  {
    title: 'First',
    value: 0,
  },
  {
    title: 'Third',
    value: 2,
  },
  {
    title: 'None',
  },
];

export default class App extends Component {
  state = {
    activeSections: [],
    collapsed: true,
    multipleSelect: false,
  };

  toggleExpanded = () => {
    this.setState({ collapsed: !this.state.collapsed });
  };

  setSections = (sections) => {
    this.setState({
      activeSections: sections.includes(undefined) ? [] : sections,
    });
  };

  renderHeader = (section, _, isActive) => {
    return (
      <Animatable.View
        duration={400}
        style={[styles.header, isActive ? styles.active : styles.inactive]}
        transition="backgroundColor"
      >
        <Text style={styles.headerText}>{section.title}</Text>
      </Animatable.View>
    );
  };

  renderContent(section, _, isActive) {
    return (
      <Animatable.View
        duration={400}
        style={[styles.content, isActive ? styles.active : styles.inactive]}
        transition="backgroundColor"
      >
        <Text>{section.content}</Text>
      </Animatable.View>
    );
  }

  render() {
    const { multipleSelect, activeSections } = this.state;

    return (
      <View style={styles.container}>
        <ScrollView contentContainerStyle={{ marginBottom: 120, paddingTop: 30 }}>
          <Text style={styles.title}>Accordion Example</Text>

          <View style={styles.multipleToggle}>
            <Text style={styles.multipleToggle__title}>Multiple Select?</Text>
            <Switch
              value={multipleSelect}
              onValueChange={(a) => this.setState({ multipleSelect: a })}
            />
          </View>

          <View style={styles.selectors}>
            <Text style={styles.selectTitle}>Select:</Text>

            {SELECTORS.map((selector) => (
              <TouchableOpacity
                key={selector.title}
                onPress={() => this.setSections([selector.value])}
              >
                <View style={styles.selector}>
                  <Text
                    style={
                      activeSections.includes(selector.value) &&
                      styles.activeSelector
                    }
                  >
                    {selector.title}
                  </Text>
                </View>
              </TouchableOpacity>
            ))}
          </View>

          <TouchableOpacity onPress={this.toggleExpanded}>
            <View style={styles.header}>
              <Text style={styles.headerText}>Last Week</Text>
            </View>
          </TouchableOpacity>
          <Collapsible collapsed={this.state.collapsed}>
            <View style={styles.content}>
              <Animatable.View
                animation={this.state.collapsed ? undefined : 'zoomIn'}
                duration={300}
                useNativeDriver
              >
                Bacon ipsum dolor amet chuck turducken landjaeger tongue spare
                ribs
              </Animatable.View>
            </View>
          </Collapsible>
    
          <Accordion
            align="bottom"
            activeSections={activeSections}
            sections={CONTENT}
            touchableComponent={TouchableOpacity}
            expandMultiple={multipleSelect}
            renderHeader={this.renderHeader}
            renderContent={this.renderContent}
            duration={400}
            onChange={this.setSections}
            renderAsFlatList={false}
          />
        </ScrollView>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5FCFF',
    paddingTop: 55,
  },
  title: {
    textAlign: 'center',
    fontSize: 22,
    fontWeight: '300',
    marginBottom: 20,
  },
  header: {
    backgroundColor: '#F5FCFF',
    padding: 10,
  },
  headerText: {
    textAlign: 'center',
    fontSize: 16,
    fontWeight: '500',
  },
  content: {
    padding: 20,
    backgroundColor: '#fff',
    height: 300,
    width: '100%'
  },
  active: {
    backgroundColor: 'rgba(255,255,255,1)',
  },
  inactive: {
    backgroundColor: 'rgba(245,252,255,1)',
  },
  selectors: {
    marginBottom: 10,
    flexDirection: 'row',
    justifyContent: 'center',
  },
  selector: {
    backgroundColor: '#F5FCFF',
    padding: 10,
  },
  activeSelector: {
    fontWeight: 'bold',
  },
  selectTitle: {
    fontSize: 14,
    fontWeight: '500',
    padding: 10,
  },
  multipleToggle: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginVertical: 30,
    alignItems: 'center',
  },
  multipleToggle__title: {
    fontSize: 16,
    marginRight: 8,
  },
  openView: {
    backgroundColor: '#2B2B2B',
    opacity: .75,
    height: '95%',
    width: '95%',
    marginTop: 6,
    marginLeft: 8,
    borderRadius: 30,
  }
});

<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
<Text>Home!</Text>
</View>
<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
<Text>Settings!</Text>
</View>


import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';

import PersonalScreen from './personalScreen';
import SystemScreen from './systemScreen';
import ActivityScreen from './activityScreen';


const TabNavigator = createMaterialTopTabNavigator(
    {
        Personal: {
        screen: PersonalScreen,
        navigationOptions: {
          tabBarLabel: 'Personal',
          showLabel: ({ focused }) => {
            console.log(focused);
            return focused ? true : false;
          },
          tabBarIcon: (tabInfo) => (
            <Ionicons
              name="ios-person-circle-outline"
              size={tabInfo.focused ? 25 : 20}
              color={tabInfo.tintColor}
            />
          ),
        },
      },
      System: {
        screen: SystemScreen,
        navigationOptions: {
          tabBarLabel: 'System',
          tabBarIcon: (tabInfo) => (
            <Ionicons
              name="ios-images-outline"
              size={tabInfo.focused ? 24 : 20}
              color={tabInfo.tintColor}
            />
          ),
        },
      },
      Activity: {
        screen: ActivityScreen,
        navigationOptions: {
          tabBarLabel: 'Activity',
          tabBarIcon: (tabInfo) => (
            <Ionicons
              name="ios-videocam-outline"
              size={tabInfo.focused ? 25 : 20}
              color={tabInfo.tintColor}
            />
          ),
        },
      },
    },
    {
      tabBarOptions: {
        showIcon: true,
    
        style: {
          backgroundColor: "#006600",
          marginTop: 28,
        },
      },
    }
  );
    
const Navigator = createAppContainer(TabNavigator);

                <View>
                <Navigator>
                    <PersonalScreen/>
                </Navigator>
                </View>


                {/* <TouchableOpacity onPress={signOut} styles={styles.signOutBtn}> 
                    <Text style={styles.txt}>SignOut</Text>
                </TouchableOpacity> */}

Spare txt: 
Download Free fonts from FFonts:

https://www.ffonts.net

Free Fonts Donwload